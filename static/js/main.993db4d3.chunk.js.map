{"version":3,"sources":["models/Character/Skill.ts","models/Character/CharacterSkills.ts","models/Character/Parameter.ts","models/Character/BaseParameter.ts","models/Character/CharacterBaseParameters.ts","models/Character/DependentParameter.ts","models/Character/CharacterDependentParameters.ts","models/Character/Character.ts","components/TextField/TextField.styled.ts","components/TextField/TextField.tsx","components/Button/Button.styled.ts","components/Button/Button.tsx","pages/Editor.tsx","hooks/useCharacter.ts","hooks/useCharacterImporter.ts","hooks/useCharacterExporter.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Skill","name","base","makeObservable","this","_name","_base","_level","addDependency","newValue","Math","max","min","value","LEVELS","length","level","observable","action","computed","CharacterSkills","characterBaseParameters","_attack","strength","_stealth","dexterity","_archery","_learnability","intelligence","_survival","_medicine","_intimidation","charisma","_insight","_appearance","_manipulation","Parameter","initialValue","_value","BaseParameter","_dependenciesCallbacks","forEach","callback","push","notifyAll","CharacterBaseParameters","_strength","_dexterity","_intelligence","_charisma","DependentParameter","initialValueCallback","_initialValueCallback","CharacterDependentParameters","_vitality","recalculate","_evasion","_energy","Character","_baseParameters","_dependentParameters","_skills","trimLeft","vitality","StyledTextField","styled","input","attrs","props","type","TextField","other","StyledButton","button","disabled","css","primary","secondary","Button","children","withObserver","character","useRef","current","inputFileRef","React","createRef","characterImporter","ref","change","e","files","file","reader","FileReader","onload","read","readAsText","target","jsonStr","result","setCharacterFields","alert","json","JSON","parse","Object","keys","baseParameters","parameterKey","key","dependentParameters","skills","upload","click","onchange","useCharacterImporter","characterExporter","exportedObject","download","data","encodeURIComponent","stringify","a","document","createElement","setAttribute","body","appendChild","remove","useCharacterExporter","baseParametersKeys","dependentParametersKeys","skillsKeys","className","hidden","onClick","placeholder","onChange","map","i","damage","train","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.993db4d3.chunk.js","sourcesContent":["import {BaseParameter} from \"./BaseParameter\"\nimport {action, computed, makeObservable, observable} from \"mobx\"\n\nexport class Skill {\n  public static LEVELS = [\n    'Уровень 0: Нетренированный',\n    'Уровень 1: Новичок',\n    'Уровень 2: Ученик',\n    'Уровень 3: Адепт',\n    'Уровень 4: Эксперт',\n    'Уровень 5: Мастер',\n  ]\n\n  @observable private _name: string\n\n  @observable private _base: BaseParameter<number>\n\n  @observable private _level: number\n\n  constructor(name: string, base: BaseParameter<number>) {\n    makeObservable(this)\n\n    this._name = name\n    this._base = base\n    this._level = 0\n\n    this._base.addDependency((newValue) => {\n      this._level = Math.max(0, Math.min(this._level, newValue))\n    })\n  }\n\n  @action\n  public train() {\n    this._level = Math.max(0, Math.min(this._level + 1, this._base.value, Skill.LEVELS.length - 1))\n  }\n\n  public get name(): string {\n    return this._name\n  }\n\n  @computed\n  public get level(): number {\n    return this._level\n  }\n\n  public set level(level) {\n    this._level = level\n  }\n}","import {Skill} from \"./Skill\"\nimport {makeObservable, observable} from \"mobx\"\nimport {CharacterBaseParameters} from \"./CharacterBaseParameters\"\n\nexport class CharacterSkills {\n\n  @observable private readonly _attack: Skill\n\n  @observable private readonly _stealth: Skill\n\n  @observable private readonly _archery: Skill\n\n  @observable private readonly _learnability: Skill\n\n  @observable private readonly _survival: Skill\n\n  @observable private readonly _medicine: Skill\n\n  @observable private readonly _intimidation: Skill\n\n  @observable private readonly _insight: Skill\n\n  @observable private readonly _appearance: Skill\n\n  @observable private readonly _manipulation: Skill\n\n  constructor(characterBaseParameters: CharacterBaseParameters) {\n    makeObservable(this)\n\n    this._attack = new Skill('Атака', characterBaseParameters.strength)\n    this._stealth = new Skill('Стелс', characterBaseParameters.dexterity)\n    this._archery = new Skill('Стрельба из лука', characterBaseParameters.dexterity)\n    this._learnability = new Skill('Обучаемость', characterBaseParameters.intelligence)\n    this._survival = new Skill('Выживание', characterBaseParameters.intelligence)\n    this._medicine = new Skill('Медицина', characterBaseParameters.intelligence)\n    this._intimidation = new Skill('Запугивание', characterBaseParameters.charisma)\n    this._insight = new Skill('Проницательность', characterBaseParameters.charisma)\n    this._appearance = new Skill('Внешний вид', characterBaseParameters.charisma)\n    this._manipulation = new Skill('Манипулирование', characterBaseParameters.charisma)\n  }\n\n  public get attack(): Skill {\n    return this._attack\n  }\n\n  public get stealth(): Skill {\n    return this._stealth\n  }\n\n  public get archery(): Skill {\n    return this._archery\n  }\n\n  public get learnability(): Skill {\n    return this._learnability\n  }\n\n  public get survival(): Skill {\n    return this._survival\n  }\n\n  public get medicine(): Skill {\n    return this._medicine\n  }\n\n  public get intimidation(): Skill {\n    return this._intimidation\n  }\n\n  public get insight(): Skill {\n    return this._insight\n  }\n\n  public get appearance(): Skill {\n    return this._appearance\n  }\n\n  public get manipulation(): Skill {\n    return this._manipulation\n  }\n}","import {makeObservable, observable} from \"mobx\"\n\nexport abstract class Parameter<T> {\n  @observable protected _value: T\n  @observable private _name: string\n\n  constructor(initialValue: T, name: string) {\n    makeObservable(this)\n\n    this._value = initialValue\n    this._name = name\n  }\n\n  public abstract get value(): T\n  public abstract set value(value)\n\n  public get name(): string {\n    return this._name\n  }\n}","import {Parameter} from \"./Parameter\"\nimport {action, computed, makeObservable, observable} from \"mobx\"\n\nexport class BaseParameter<T> extends Parameter<T> {\n\n  @observable private _dependenciesCallbacks: ((newValue: T) => void)[]\n\n  constructor(initialValue: T, name: string) {\n    super(initialValue, name)\n\n    makeObservable(this)\n\n    this._dependenciesCallbacks = []\n  }\n\n  @action\n  private notifyAll() {\n    this._dependenciesCallbacks.forEach(callback => callback(this._value))\n  }\n\n  @action\n  public addDependency(callback: (newValue: T) => void) {\n    this._dependenciesCallbacks.push(callback)\n  }\n\n  @computed\n  public get value(): T {\n    return this._value\n  }\n\n  public set value(value) {\n    this._value = value\n    this.notifyAll()\n  }\n}","import {BaseParameter} from \"./BaseParameter\"\nimport {makeObservable, observable} from \"mobx\"\n\nexport class CharacterBaseParameters {\n\n  @observable private readonly _strength: BaseParameter<number>\n\n  @observable private readonly _dexterity: BaseParameter<number>\n\n  @observable private readonly _intelligence: BaseParameter<number>\n\n  @observable private readonly _charisma: BaseParameter<number>\n\n  constructor() {\n    makeObservable(this)\n\n    this._strength = new BaseParameter<number>(0, 'Сила')\n    this._dexterity = new BaseParameter<number>(0, 'Ловкость')\n    this._intelligence = new BaseParameter<number>(0, 'Интеллект')\n    this._charisma = new BaseParameter<number>(0, 'Харизма')\n  }\n\n  public get strength(): BaseParameter<number> {\n    return this._strength\n  }\n\n  public get dexterity(): BaseParameter<number> {\n    return this._dexterity\n  }\n\n  public get intelligence(): BaseParameter<number> {\n    return this._intelligence\n  }\n\n  public get charisma(): BaseParameter<number> {\n    return this._charisma\n  }\n}","import {Parameter} from \"./Parameter\"\nimport {action, computed, makeObservable, observable} from \"mobx\"\n\nexport class DependentParameter<T> extends Parameter<T> {\n  @observable private readonly _initialValueCallback: () => T\n\n  constructor(name: string, initialValueCallback: () => T) {\n    super(initialValueCallback(), name)\n\n    makeObservable(this)\n\n    this._initialValueCallback = initialValueCallback\n  }\n\n  @action\n  public recalculate() {\n    this._value = this._initialValueCallback()\n  }\n\n  @computed\n  public get value(): T {\n    return this._value\n  }\n\n  public set value(value) {\n    this._value = value\n  }\n}","import {DependentParameter} from \"./DependentParameter\"\nimport {makeObservable, observable} from \"mobx\"\nimport {CharacterBaseParameters} from \"./CharacterBaseParameters\"\n\nexport class CharacterDependentParameters {\n\n  @observable private readonly _vitality: DependentParameter<number>\n\n  @observable private readonly _evasion: DependentParameter<number>\n\n  @observable private readonly _energy: DependentParameter<number>\n\n  constructor(characterBaseParameters: CharacterBaseParameters) {\n    makeObservable(this)\n\n    this._vitality = new DependentParameter<number>(\n      'Жизненная сила',\n      () => 3 + characterBaseParameters.strength.value,\n    )\n    characterBaseParameters.strength.addDependency(() => this._vitality.recalculate())\n\n    this._evasion = new DependentParameter<number>(\n      'Уклонение',\n      () => 10 + characterBaseParameters.dexterity.value,\n    )\n    characterBaseParameters.dexterity.addDependency(() => this._evasion.recalculate())\n\n    this._energy = new DependentParameter<number>(\n      'Энергичность',\n      () => characterBaseParameters.dexterity.value + characterBaseParameters.intelligence.value,\n    )\n    characterBaseParameters.dexterity.addDependency(() => this._energy.recalculate())\n    characterBaseParameters.intelligence.addDependency(() => this._energy.recalculate())\n  }\n\n  public get vitality(): DependentParameter<number> {\n    return this._vitality\n  }\n\n  public get evasion(): DependentParameter<number> {\n    return this._evasion\n  }\n\n  public get energy(): DependentParameter<number> {\n    return this._energy\n  }\n}","import {CharacterSkills} from \"./CharacterSkills\"\nimport {action, computed, makeObservable, observable} from \"mobx\"\nimport {CharacterBaseParameters} from \"./CharacterBaseParameters\"\nimport {CharacterDependentParameters} from \"./CharacterDependentParameters\"\n\nexport class Character {\n\n  @observable private _name: string\n\n  @observable private readonly _baseParameters: CharacterBaseParameters\n\n  @observable private readonly _dependentParameters: CharacterDependentParameters\n\n  @observable private readonly _skills: CharacterSkills\n\n  constructor(name: string) {\n    makeObservable(this)\n\n    this._name = name\n    this._baseParameters = new CharacterBaseParameters()\n    this._dependentParameters = new CharacterDependentParameters(this._baseParameters)\n    this._skills = new CharacterSkills(this._baseParameters)\n  }\n\n  @computed\n  public get name(): string {\n    return this._name\n  }\n\n  public set name(name) {\n    this._name = name.trimLeft()\n  }\n\n  public get baseParameters(): CharacterBaseParameters {\n    return this._baseParameters\n  }\n\n  public get dependentParameters(): CharacterDependentParameters {\n    return this._dependentParameters\n  }\n\n  public get skills(): CharacterSkills {\n    return this._skills\n  }\n\n  @action\n  public damage() {\n    if (this._dependentParameters.vitality.value > 0) {\n      this._dependentParameters.vitality.value--\n    }\n  }\n}","import styled from \"styled-components\"\n\nexport const StyledTextField = styled.input.attrs(props => ({\n  type: 'text',\n}))`\n  padding: 5px 10px;\n  font-size: 15px;\n  border: 1px solid #eaeaea;\n  border-radius: 3px;\n  flex: 1;\n`","import React, {InputHTMLAttributes} from \"react\"\nimport {StyledTextField} from \"./TextField.styled\"\n\nfunction TextField(props: InputHTMLAttributes<HTMLInputElement>) {\n  const {type, ...other} = props\n\n  return (\n    <StyledTextField {...other} />\n  )\n}\n\nexport default TextField","import styled, {css} from \"styled-components\"\nimport {ButtonProps} from \"./Button\"\n\nexport const StyledButton = styled.button<ButtonProps>`\n  border: none;\n  background: #eeeeee;\n  outline: none;\n  color: rgb(63, 69, 74);\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  transition: 0.1s;\n  margin-right: 5px;\n  margin-bottom: 5px;\n\n  ${props => !props.disabled && css`\n    &:hover {\n      opacity: 0.8;\n    }\n\n    &:active {\n      opacity: 0.7;\n    }\n  `}\n\n  ${props => props.primary && css`\n    background: rgb(0, 108, 255);\n    color: white;\n  `}\n\n  ${props => props.secondary && css`\n    background: rgb(255, 0, 103);\n    color: white;\n  `}\n\n  ${props => props.disabled && css`\n    color: #b8b8b8;\n    background: rgb(241, 241, 241);\n    cursor: auto;\n  `}\n`","import React from \"react\"\nimport {StyledButton} from \"./Button.styled\"\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  primary?: boolean,\n  secondary?: boolean,\n}\n\nfunction Button(props: ButtonProps) {\n  const {children, ...other} = props\n\n  return (\n    <StyledButton {...other}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default Button","import React from \"react\"\n\nimport '../scss/index.scss'\n\nimport {useCharacter} from \"../hooks/useCharacter\"\nimport TextField from \"../components/TextField/TextField\"\nimport {Observer} from 'mobx-react'\n\nimport {Skill} from \"../models/Character/Skill\"\nimport {CharacterSkills} from \"../models/Character/CharacterSkills\"\nimport {CharacterBaseParameters} from \"../models/Character/CharacterBaseParameters\"\nimport {CharacterDependentParameters} from \"../models/Character/CharacterDependentParameters\"\nimport {useCharacterExporter} from \"../hooks/useCharacterExporter\"\nimport {useCharacterImporter} from \"../hooks/useCharacterImporter\"\nimport Button from \"../components/Button/Button\"\n\nfunction Editor() {\n  const INITIAL_NAME = ''\n\n  const character = useCharacter(INITIAL_NAME)\n\n  const inputFileRef = React.createRef<HTMLInputElement>()\n  const characterImporter = useCharacterImporter(inputFileRef, character)\n  const characterExporter = useCharacterExporter(character)\n\n  const baseParametersKeys = Object.keys(character.baseParameters) as Array<keyof CharacterBaseParameters>\n  const dependentParametersKeys = Object.keys(character.dependentParameters) as Array<keyof CharacterDependentParameters>\n  const skillsKeys = Object.keys(character.skills) as Array<keyof CharacterSkills>\n\n  return (\n    <div className='container'>\n\n      <div className='space-between'>\n        <span>Уже есть персонаж?</span>\n        <input type='file' ref={inputFileRef} hidden/>\n        <Button onClick={characterImporter.upload}>Открыть</Button>\n      </div>\n\n      <h1 className='name'>{character.name === '' ? 'Редактор персонажа' : character.name}</h1>\n\n      <TextField\n        placeholder='Имя'\n        value={character.name}\n        onChange={(e) => character.name = e.target.value}/>\n\n      <div className='block'>\n        <header className='parameters-header-text'>Базовые характеристики:</header>\n\n        {baseParametersKeys.map((key, i) => (\n          <div className='space-between' key={i}>\n            <span>{character.baseParameters[key].name}:</span>\n            <input type='number'\n                   value={character.baseParameters[key].value}\n                   onChange={(e) => character.baseParameters[key].value = +e.target.value}/>\n          </div>\n        ))}\n      </div>\n\n      <div className='block'>\n        <header className='parameters-header-text'>Зависимые характеристики:</header>\n        {dependentParametersKeys.map((key, i) => (\n          <div className='space-between' key={i}>\n            <span>{character.dependentParameters[key].name}</span>\n            <span>{character.dependentParameters[key].value}</span>\n          </div>\n        ))}\n        <Button secondary onClick={() => character.damage()}>Нанести урон</Button>\n      </div>\n\n      <div className='block'>\n        <header className='parameters-header-text'>Скиллы:</header>\n        {skillsKeys.map((key, i) => (\n          <div className='skill' key={i}>\n            <b>{character.skills[key].name}</b>\n            <p>{Skill.LEVELS[character.skills[key].level]}</p>\n            <Button onClick={() => character.skills[key].train()}>Тренировать</Button>\n          </div>\n        ))}\n      </div>\n\n      <Button primary onClick={characterExporter.download}>Сохранить</Button>\n\n    </div>\n  )\n}\n\nconst withObserver = (children: () => JSX.Element) => {\n  return function () {\n    return <Observer>{() => children()}</Observer>\n  }\n}\n\nexport default withObserver(Editor)","import {useRef} from \"react\"\nimport {Character} from \"../models/Character/Character\"\n\nexport const useCharacter = (name: string) => {\n  const character = useRef(new Character(name))\n  return character.current\n}","import {Character} from \"../models/Character/Character\"\nimport {CharacterBaseParameters} from \"../models/Character/CharacterBaseParameters\"\nimport {CharacterDependentParameters} from \"../models/Character/CharacterDependentParameters\"\nimport {CharacterSkills} from \"../models/Character/CharacterSkills\"\n\nexport const useCharacterImporter = (ref: React.RefObject<HTMLInputElement>, character: Character) => {\n\n  const change = (e: Event) => {\n    if (!ref.current) {\n      return\n    }\n\n    const files = ref.current.files\n\n    if (!files) {\n      return\n    }\n\n    if (files.length < 1) {\n      return\n    }\n\n    const file = files[0]\n\n    const reader = new FileReader()\n    reader.onload = read\n    reader.readAsText(file)\n\n    ref.current.value = ''\n  }\n\n  const read = (e: ProgressEvent<FileReader>) => {\n    if (!e.target) {\n      alert('Не удается прочитать файл')\n      return\n    }\n\n    const jsonStr = e.target.result as string\n\n    try {\n      setCharacterFields(jsonStr)\n    } catch (e) {\n      alert('Файл не соответствует формату')\n    }\n  }\n\n  const setCharacterFields = (jsonStr: string) => {\n    const json = JSON.parse(jsonStr)\n\n    character.name = json.name\n\n    Object.keys(json.baseParameters).forEach((parameterKey: any) => {\n      const key = parameterKey as keyof CharacterBaseParameters\n      character.baseParameters[key].value = json.baseParameters[key]\n    })\n\n    Object.keys(json.dependentParameters).forEach((parameterKey: any) => {\n      const key = parameterKey as keyof CharacterDependentParameters\n      character.dependentParameters[key].value = json.dependentParameters[key]\n    })\n\n    Object.keys(json.skills).forEach((parameterKey: any) => {\n      const key = parameterKey as keyof CharacterSkills\n      character.skills[key].level = json.skills[key]\n    })\n  }\n\n  const upload = () => {\n    if (!ref.current) {\n      alert('Не удается выбрать файл')\n      return\n    }\n\n    ref.current.click()\n    ref.current.onchange = change\n  }\n\n  return {\n    upload,\n    change,\n  }\n}","import {CharacterBaseParameters} from '../models/Character/CharacterBaseParameters'\nimport {CharacterDependentParameters} from '../models/Character/CharacterDependentParameters'\nimport {CharacterSkills} from '../models/Character/CharacterSkills'\nimport {Character} from '../models/Character/Character'\n\nexport const useCharacterExporter = (character: Character) => {\n  const exportedObject: any = {\n    name: character.name,\n    baseParameters: {},\n    dependentParameters: {},\n    skills: {},\n  }\n\n  Object.keys(character.baseParameters).forEach(parameterKey => {\n    const key = parameterKey as keyof CharacterBaseParameters\n    exportedObject.baseParameters[key] = character.baseParameters[key].value\n  })\n\n  Object.keys(character.dependentParameters).forEach(parameterKey => {\n    const key = parameterKey as keyof CharacterDependentParameters\n    exportedObject.dependentParameters[key] = character.dependentParameters[key].value\n  })\n\n  Object.keys(character.skills).forEach(parameterKey => {\n    const key = parameterKey as keyof CharacterSkills\n    exportedObject.skills[key] = character.skills[key].level\n  })\n\n  const download = () => {\n    const data = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(exportedObject))\n\n    const a = document.createElement('a')\n    a.setAttribute('href', data)\n    a.setAttribute('download', 'character.json')\n\n    document.body.appendChild(a)\n    a.click()\n    a.remove()\n  }\n\n  return {\n    download,\n  }\n}","import React from 'react'\nimport Editor from \"./pages/Editor\"\n\nfunction App() {\n  return <Editor />\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}